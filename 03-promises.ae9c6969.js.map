{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAyCA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAjDQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALb,MAAOiB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAErBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAElC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EAKpD,YAJA3B,EAAA4B,OAAOC,QAAQ,oCAAqC,CAClDC,QAAS,IACTC,cAAc,KAqCpB,SAAwB3B,EAAOiB,EAAMC,GAEnC,IADA,IAAMU,EAAW,GACRC,EAAI,EAAGA,GAAKX,EAAQW,GAAK,EAAG,CACnC,IACMC,EAAUhC,EAAc+B,EADT7B,EAAQiB,GAAQY,EAAI,IAEzCD,EAASG,KAAKD,E,CAEhB,OAAOF,C,EAxCaI,CAAeb,EAAYG,EAAWC,GAE9CU,KAAI,SAAAH,G,OACdA,EACGI,MAAK,SAAAC,G,IAAGpC,EAAQoC,EAARpC,SAAUC,EAAKmC,EAALnC,MACjBJ,EAAA4B,OAAOY,QAAQ,uBAAwCC,OAAftC,EAAS,QAAYsC,OAANrC,EAAM,MAAK,CAC9D0B,QAAO,IACTC,cAAc,G,IAGjBW,OAAM,SAAAH,G,IAAGpC,EAAQoC,EAARpC,SAAUC,EAAKmC,EAALnC,MAClBJ,EAAA4B,OAAOe,QAAQ,sBAAqCF,OAAftC,EAAS,QAAYsC,OAANrC,EAAM,MAAK,CAC7D0B,QAAS,IACTC,cAAc,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n    Notify.warning('Please fill with positive numbers', {\n      timeout: 2000,\n      clickToClose: true,\n    });\n    return;\n  }\n  const promicesArr = createPromises(delayValue, stepValue, amountValue);\n\n  promicesArr.map(promice =>\n    promice\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n          clickToClose: true,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n          clickToClose: true,\n        });\n      })\n  );\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromises(delay, step, amount) {\n  const promices = [];\n  for (let i = 1; i <= amount; i += 1) {\n    const promiceDelay = delay + step * (i - 1);\n    const promice = createPromise(i, promiceDelay);\n    promices.push(promice);\n  }\n  return promices;\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","Number","value","stepValue","amountValue","Notify","warning","timeout","clickToClose","promices","i","promice","push","$ce04d3a99e08e73b$var$createPromises","map","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.ae9c6969.js.map"}